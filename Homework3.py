'''1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.'''
# def division_f(a, b):
#     try:
#         a, b = float(a), float(b)
#         div_result = a / b
#     except ValueError:
#         return 'You should enter any number.'
#     except ZeroDivisionError:
#         return 'Sorry, division by zero is prohibited.'
#     return div_result
#
# print(division_f(10, 5))
# print(division_f(10, ''))
# print(division_f(10, 0))


'''2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.'''
# def user_fun_args(**kwargs):
#     return kwargs
#
#
# print(user_fun_args(
#     name=input('name: '),
#     surname=input('surname: '),
#     bitrhday=input('bitrhday: '),
#     city=input('city: '),
#     email=input('email: '),
#     phone=input('phone: '),
# ))

'''3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.'''

# def my_func(x, y, z) -> object:
#     try:
#         three = [x, y, z]
#         three.pop(three.index(min(three)))
#         return sum(three)
#     except TypeError:
#         return 'Please, enter a number.'
#
# print(my_func(1, 1, ''))
# print('Here we have:', my_func(1, 1, 1))

'''4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень. Подсказка: попробуйте решить задачу двумя способами. 
Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.'''

def pow_func_1(x, y):
    try:
        result = float(x) ** int(y)
    except ValueError:
        return 'Please, enter float number and negative integer number.'
    return result

print(pow_func_1(10.0, -2.85))
print(pow_func_1(10.0, 'u'))
print(pow_func_1('u', -3.4))
print(pow_func_1(10, 3.4))# как сделать проверку на целое отрицательное?

'''5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.'''


'''6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().'''